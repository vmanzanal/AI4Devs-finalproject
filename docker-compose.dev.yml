# Configuración Unificada para Desarrollo (Fusión de .yml y .override.yml)
version: "3.8"

services:
  # PostgreSQL Database (Base + Overrides)
  postgres:
    image: postgres:15-alpine
    container_name: sepe-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-sepe_comparator}
      POSTGRES_USER: ${POSTGRES_USER:-sepe_user}
      POSTGRES_PASSWORD: ${POSTES_PASSWORD:-sepe_password}
      POSTGRES_HOST_AUTH_METHOD: trust # Desde override.yml
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432" # Desde override.yml
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-sepe_user} -d ${POSTGRES_DB:-sepe_comparator}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - sepe-network

  # Redis for caching and background tasks (Base + Overrides)
  redis:
    image: redis:7-alpine
    container_name: sepe-redis
    command: redis-server --appendonly yes # Desde override.yml (quita el requirepass)
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379" # Desde override.yml
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - sepe-network

  # Backend API (Solo Contenedorizado si es necesario. Si ejecutas localmente, ignora este build)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sepe-backend
    # COMANDO DE DESARROLLO (con reload) desde override.yml
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload --log-level debug
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-sepe_user}:${POSTGRES_PASSWORD:-sepe_password}@postgres:5432/${POSTGRES_DB:-sepe_comparator}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key-change-in-production}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173,http://frontend:3000,localhost,127.0.0.1,frontend,0.0.0.0}
      - DEBUG=true # Desde override.yml
      - LOG_LEVEL=DEBUG # Desde override.yml
    volumes:
      - ./backend:/app:cached # Añade :cached desde override.yml
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
      # Importante: Node_modules ya no se usa aquí.
    ports:
      - "8000:8000"
      - "5678:5678" # Puerto de debug
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sepe-network

  # Frontend Application (Fusión de componentes)
  frontend:
    build:
      context: ./frontend
      # Asumo que Dockerfile.dev es el que quieres usar para desarrollo.
      dockerfile: Dockerfile.dev
    container_name: sepe-frontend
    command: npm run dev # Desde override.yml
    environment:
      - NODE_ENV=development # Desde override.yml
      - VITE_API_BASE_URL=http://localhost:8000/api/v1 # Desde override.yml
      - VITE_APP_TITLE=${VITE_APP_TITLE:-SEPE Templates Comparator}
      - VITE_APP_VERSION=${VITE_APP_VERSION:-1.0.0}
    volumes:
      - ./frontend:/app:cached # Añade :cached desde override.yml
      - /app/node_modules # Sigue usando el volumen anónimo para node_modules
    ports:
      - "3000:3000"
      - "24678:24678" # HMR port
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - sepe-network

  # Background Worker (Fusión de componentes)
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sepe-worker
    # Comando de desarrollo (más verbose) desde override.yml
    command: celery -A app.services.celery_app worker --loglevel=debug --concurrency=2
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-sepe_user}:${POSTGRES_PASSWORD:-sepe_password}@postgres:5432/${POSTGRES_DB:-sepe_comparator}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key-change-in-production}
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-change-in-production}
      - DEBUG=true
      - LOG_LEVEL=DEBUG
    volumes:
      - ./backend:/app:cached # Añade :cached desde override.yml
      - backend_uploads:/app/uploads
      - backend_logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - sepe-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local

networks:
  sepe-network:
    driver: bridge
    name: sepe-network
